// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String  @id @default(cuid())
  nomeCompleto String
  nomeUsuario  String
  email        String  @unique
  fotoUrl      String?

  posts       Post[]
  aluno       Aluno?
  professor   Professor?
  comentarios Comentario[]
}

model Aluno {
  matricula String  @unique
  exibeNome Boolean @default(true)

  user             User              @relation(fields: [userId], references: [id])
  userId           String            @unique
  alunoDisciplinas AlunoDisciplina[]
  envioAtividades  EnvioAtividade[]

  @@id([userId])
}

model Professor {
  siape String @unique

  avisos      Aviso[]
  disciplinas Disciplina[]
  user        User         @relation(fields: [userId], references: [id])
  userId      String       @unique

  @@id([userId])
}

model Disciplina {
  id      String  @id @default(cuid())
  codigo  String
  nome    String
  fotoUrl String?
  cor     String  @default("#e4e4e7")

  alunoDisciplinas AlunoDisciplina[]

  Professor       Professor @relation(fields: [professorUserId], references: [userId])
  professorUserId String

  posts Post[]
}

model Rank {
  id      Int     @id @default(autoincrement())
  nome    String
  fotoUrl String?

  AlunoDisciplinas AlunoDisciplina[]
}

model AlunoDisciplina {
  id String @id @default(cuid())

  rank   Rank @relation(fields: [rankId], references: [id])
  rankId Int

  Disciplina   Disciplina @relation(fields: [disciplinaId], references: [id])
  disciplinaId String

  aluno       Aluno  @relation(fields: [alunoUserId], references: [userId])
  alunoUserId String
}

model Aviso {
  id       String   @id @default(cuid())
  mensagem String
  data     DateTime @default(now())

  Professor       Professor @relation(fields: [professorUserId], references: [userId])
  professorUserId String
}

model Post {
  id                  String   @id @default(cuid())
  mensagem            String
  arquivoUrl          String?
  dataDisponibilidade DateTime @default(now())
  tipo                String

  User   User   @relation(fields: [userId], references: [id])
  userId String

  Atividade Atividade?

  comentarios Comentario[]

  Disciplina   Disciplina @relation(fields: [disciplinaId], references: [id])
  disciplinaId String
}

model Comentario {
  id       String @id @default(cuid())
  mensagem String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  post   Post   @relation(fields: [postId], references: [id])
  postId String
}

model Atividade {
  id    String   @id @default(cuid())
  nota  Decimal?
  prazo DateTime

  post            Post             @relation(fields: [postId], references: [id])
  postId          String           @unique
  enviosAtividade EnvioAtividade[]
}

model EnvioAtividade {
  id String @id @default(cuid())

  atividade Atividade @relation(fields: [atividadeId], references: [id])

  aluno       Aluno  @relation(fields: [alunoUserId], references: [userId])
  alunoUserId String
  atividadeId String
}
