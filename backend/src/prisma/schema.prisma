// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String  @id @default(cuid())
  nomeCompleto String
  nomeUsuario  String
  email        String  @unique
  fotoUrl      String?

  posts     Post[]
  aluno     Aluno?
  professor Professor?
}

model Aluno {
  matricula String  @unique
  exibeNome Boolean @default(true)

  user            User              @relation(fields: [userId], references: [id])
  userId          String            @unique
  AlunoDisciplina AlunoDisciplina[]

  @@id([userId])
}

model Professor {
  siape String @unique

  avisos      Aviso[]
  disciplinas Disciplina[]
  user        User         @relation(fields: [userId], references: [id])
  userId      String       @unique

  @@id([userId])
}

model Disciplina {
  id      String  @id @default(cuid())
  codigo  String
  nome    String
  fotoUrl String?

  alunoDisciplinas AlunoDisciplina[]

  Professor       Professor @relation(fields: [professorUserId], references: [userId])
  professorUserId String
}

model Rank {
  id      Int     @id @default(autoincrement())
  nome    String
  fotoUrl String?

  AlunoDisciplinas AlunoDisciplina[]
}

model AlunoDisciplina {
  id String @id @default(cuid())

  rank   Rank @relation(fields: [rankId], references: [id])
  rankId Int

  Disciplina   Disciplina @relation(fields: [disciplinaId], references: [id])
  disciplinaId String

  aluno       Aluno  @relation(fields: [alunoUserId], references: [userId])
  alunoUserId String
}

model Aviso {
  id       String   @id @default(cuid())
  mensagem String
  data     DateTime

  Professor       Professor @relation(fields: [professorUserId], references: [userId])
  professorUserId String
}

model Post {
  id         String   @id @default(cuid())
  mensagem   String
  arquivoUrl String?
  data       DateTime
  tipo       String

  User   User?   @relation(fields: [userId], references: [id])
  userId String?
}
